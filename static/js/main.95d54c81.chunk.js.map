{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goodsCopy","showList","reverse","sortBy","startShowList","setState","reverseList","sortByA_Z","sortByLength","reset","this","sort","item1","item2","localeCompare","length","className","type","onClick","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,UAAU,GAAD,OAAMH,GACfI,UAAU,EACVC,SAAS,EACTC,OAAQ,Q,EAGVC,cAAgB,WACd,EAAKC,SAAS,CAAEJ,UAAU,K,EAG5BK,YAAc,WACZ,EAAKP,MAAMC,UAAUE,UACrB,EAAKG,UAAS,SAACN,GACb,MAAO,CACLG,SAAUH,EAAMG,a,EAKtBK,UAAY,WACV,EAAKF,SAAS,CAAEF,OAAQ,S,EAG1BK,aAAe,WACb,EAAKH,SAAS,CAAEF,OAAQ,Y,EAG1BM,MAAQ,WACN,EAAKJ,SAAS,CACZF,OAAQ,OACRD,SAAS,EACTF,UAAU,GAAD,OAAMH,M,4CAInB,WAAU,IAAD,OACP,EAEIa,KAAKX,MADPC,EADF,EACEA,UAAWC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASC,EADhC,EACgCA,OAchC,OAXAH,EAAUW,MAAK,SAACC,EAAeC,GAC7B,OAAQV,GACN,IAAK,MACH,OAAOS,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAKX,mCACE,sBAAKC,UAAU,MAAf,UACE,uCAEA,wBACEC,KAAK,SACLD,WACc,IAAZd,EACI,cACA,mCAENgB,QAAS,kBAAM,EAAKZ,eAPtB,qBAYA,wBACEW,KAAK,SACLD,UACwB,QAAtBN,KAAKX,MAAMI,OACP,cACA,mCAENe,QAAS,kBAAM,EAAKX,aAPtB,sBAYA,wBACEU,KAAK,SACLD,UACwB,WAAtBN,KAAKX,MAAMI,OACP,cACA,mCAENe,QAAS,kBAAM,EAAKV,gBAPtB,4BAYA,wBACES,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKT,SAHtB,mBAQGR,EAWC,6BACGD,EAAUmB,KAAI,SAACC,GAAD,OACb,6BAAgBA,GAAPA,QAXb,wBACEH,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKd,iBAHtB,4B,GAxGIiB,IAAMC,WA6HTxB,ICjJfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95d54c81.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goodsCopy: string[],\n  showList: boolean,\n  reverse: boolean,\n  sortBy: string,\n}\n\nclass App extends React.Component <{}, State> {\n  state = {\n    goodsCopy: [...goodsFromServer],\n    showList: false,\n    reverse: false,\n    sortBy: 'none',\n  };\n\n  startShowList = () => {\n    this.setState({ showList: true });\n  };\n\n  reverseList = () => {\n    this.state.goodsCopy.reverse();\n    this.setState((state) => {\n      return {\n        reverse: !state.reverse,\n      };\n    });\n  };\n\n  sortByA_Z = () => {\n    this.setState({ sortBy: 'a-z' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: 'none',\n      reverse: false,\n      goodsCopy: [...goodsFromServer],\n    });\n  };\n\n  render() {\n    const {\n      goodsCopy, showList, reverse, sortBy,\n    } = this.state;\n\n    goodsCopy.sort((item1: string, item2: string): number => {\n      switch (sortBy) {\n        case 'a-z':\n          return item1.localeCompare(item2);\n        case 'length':\n          return item1.length - item2.length;\n        default:\n          return 0;\n      }\n    });\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>Goods</h1>\n\n          <button\n            type=\"button\"\n            className={\n              reverse === false\n                ? 'App__button'\n                : 'App__button App__button--pressed'\n            }\n            onClick={() => this.reverseList()}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortBy !== 'a-z'\n                ? 'App__button'\n                : 'App__button App__button--pressed'\n            }\n            onClick={() => this.sortByA_Z()}\n          >\n            Sort A-Z\n          </button>\n\n          <button\n            type=\"button\"\n            className={\n              this.state.sortBy !== 'length'\n                ? 'App__button'\n                : 'App__button App__button--pressed'\n            }\n            onClick={() => this.sortByLength()}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"App__button\"\n            onClick={() => this.reset()}\n          >\n            Reset\n          </button>\n\n          { !showList\n            ? (\n              <button\n                type=\"button\"\n                className=\"App__button\"\n                onClick={() => this.startShowList()}\n              >\n                Start\n              </button>\n            )\n            : (\n              <ul>\n                {goodsCopy.map((item) => (\n                  <li key={item}>{item}</li>\n                ))}\n              </ul>\n            ) }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}